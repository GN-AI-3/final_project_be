name: CI/CD with Docker Compose

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스코드 체크아웃
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      # 2. Docker Hub 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Docker 이미지 빌드 & 푸시
      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/gymggun_backend .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/gymggun_backend

      # 4. docker-compose.yml과 (필요시) .env 파일을 EC2에 업로드
      - name: Upload docker-compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/final_project_be"

      - name: Create .env from GitHub Secret
        run: echo "${{ secrets.ENV_FILE }}" > .env

      # 만약 .env도 GitHub Secrets로 관리한다면:
      - name: Upload .env
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ".env"
          target: "/home/ubuntu/final_project_be"

      - name: Create Firebase Key File
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.FIREBASE_KEY_JSON }}" | base64 --decode > src/main/resources/firebase-service-account-key.json

      - name: Upload Firebase Key File
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "firebase-service-account-key.json"
          target: "/home/ubuntu/final_project_be/src/main/resources/"

      # 5. EC2에 SSH 접속 -> docker-compose pull & up -d
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd /home/ubuntu/final_project_be
            docker-compose pull   # 이미지 최신화
            docker-compose down   # 기존 컨테이너 종료
            docker-compose up -d  # 새 컨테이너 구동
