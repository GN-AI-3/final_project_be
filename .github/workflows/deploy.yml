name: CI/CD with Docker Compose

on:
  push:
    branches:
      - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 체크아웃
      - name: Checkout the repo
        uses: actions/checkout@v3

      # 2. JDK 세팅, gradlew 권한
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 3. Firebase 키 복원 (ClassPath에 넣기)
      - name: Create firebase key
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.FIREBASE_JSON_B64 }}" | base64 --decode > src/main/resources/firebase-service-account-key.json

      # 4. 빌드
      - name: Build with Gradle
        run: ./gradlew clean build

      # 5. Docker Hub 로그인
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Docker 이미지 빌드 & 푸시
      - name: Build & Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/gymggun_backend .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/gymggun_backend

      # 7. docker-compose.yml, .env 업로드
      - name: Upload docker-compose.yml
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/final_project_be"

      - name: Create .env from GitHub Secret
        run: echo "${{ secrets.ENV_FILE }}" > .env

      - name: Upload .env
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ".env"
          target: "/home/ubuntu/final_project_be"

      # 8. docker-compose up -d (EC2에서)
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd /home/ubuntu/final_project_be
            docker-compose pull
            docker-compose down
            docker-compose up -d
